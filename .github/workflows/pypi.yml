name: Build and Publish to PyPI

on:
  push

jobs:
  build:
    name: Build and test distribution
    runs-on: ubuntu-latest
    permissions:
      contents: read # only need to fetch your code
    outputs:
      test-package-version: ${{steps.set-test-version.outputs.version}}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build requirements
        run: pip install build wheel

      - name: Build distributions
        run: python -m build --wheel

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist_artifact
          path: dist/*

      # The following step renames the wheel and puts the timestamp as a local version suffix.
      # This allows us to avoid versions conflicts on test.pypi
      # First we get the original version from pyproject.toml
      # then we wipe the prvious dist/ folder
      # then we build again
      - name: Inject temporary build number into pyproject.toml and rebuild
        id: set-test-version
        shell: bash
        run: |
          orig_version=$(grep '^version =' pyproject.toml)
          timestamp=$(date +%Y%m%d%H%M)

          version="2.1.0.dev${timestamp}"
          echo "version=${version}" >> $GITHUB_ENV
          echo "version=${version}" >> $GITHUB_OUTPUT

          sed -i "s/^version = .*/version = \"${version}\"/" pyproject.toml

          rm -rf ./dist
          python -m build --wheel

      # Then we upload the test artifact as well
      - name: Upload built artifacts test
        uses: actions/upload-artifact@v4
        with:
          name: dist_artifact_test
          path: dist/*

      - name: Setup MPI
        uses: mpi4py/setup-mpi@v1

      - name: Install nox
        uses: wntrblm/nox@2024.04.15

      - name: Make sure wheel is installable
        run: |
          pip install dist/* pytest
          pytest -k lj

      - name: Run tests
        run: nox

  test-pypi-publish:
    name: Upload release to test.pypi
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/chemfit
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist_artifact_test
          path: dist/

      - name: Publish package distributions to test.pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
          skip-existing: true

  pypi-publish:
    name: Upload release to pypi
    needs: test-pypi-publish
    runs-on: ubuntu-latest
    if: >
      contains(github.event.head_commit.message, 'PUBLISH: pypi')
    environment:
      name: pypi
      url: https://pypi.org/p/chemfit
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:

      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist_artifact
          path: dist/

      - name: Publish package distributions to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          skip-existing: true
